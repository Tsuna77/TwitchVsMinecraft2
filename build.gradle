buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}

plugins {
    id 'maven-publish'
}
apply plugin: "java"
apply plugin: "net.minecraftforge.gradle"
apply plugin: "com.github.johnrengelman.shadow"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = archivesBaseName = "${mod_id}-${mc_version}-${mod_version}"

repositories {
    // Put remote maven repositories here
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

minecraft {

    mappings channel: "official", version: "${mc_version}"

    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

    runs {
        client {
            workingDirectory project.file("run")

            mods { twitchmod { source sourceSets.main } }
        }

        server {
            workingDirectory project.file("run")

            mods { twitchmod { source sourceSets.main } }
        }
    }
}

configurations {
    library
    implementation.extendsFrom library
    shadow.extendsFrom library
}

minecraft.runs.all {
    lazyToken('minecraft_classpath') {
        configurations.library.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
    }
}

dependencies {

    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    // Twitch4J chat module only
    library(group: 'com.github.twitch4j', name: 'twitch4j-chat', version: '1.9.0') {
        exclude group: "commons-lang"
        exclude group: "org.slf4j"
        exclude group: "io.github.openfeign"
    }

    // JDA without audio
    library(group: "net.dv8tion", name: "JDA", version: "5.0.0-alpha.9") {
        transitive = true
        exclude module: "opus-java"
        exclude group: "org.slf4j"
    }

    library(group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.10')

    implementation('cpw.mods:securejarhandler') { version { strictly '0.9.45' } }

    // Configured mod for config screen
//    implementation('curse.maven:configured-457570:3640884')
//    implementation('curse.maven:catalogue-459701:3559402')

}

shadowJar {

    classifier ''
    configurations = [project.configurations.shadow]
    dependencies {
        exclude(dependency("org.jetbrains:annotations"))
        exclude(dependency("com.google.code.findbugs:jsr305"))
    }

}
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {

    target = tasks.shadowJar
    prefix = "repack" // Default value is "shadow"

}

reobf {
    shadowJar {
        dependsOn createMcpToSrg
        mappings = createMcpToSrg.output
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${archivesBaseName}",
                "Specification-Vendor"    : "${author}",
                "Specification-Version"   : "${mod_version}",
                "Implementation-Title"    : "${archivesBaseName}",
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "${author}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

}

tasks.shadowJar.dependsOn tasks.relocateShadowJar
tasks.assemble.dependsOn shadowJar